.search_and_filter.row
  %section.span3
    %h1 People
    .filter_search
      =label_tag :search, "Search for a person:"
      =text_field_tag :search
    %nav
      %ul
        %li.filter_header 
          Order by #{" | "} 
          .sorter.sorter-clear
            =link_to ' Clear', '#' 
        %li.sorter.sorter-name
          =link_to 'Name', '#' 
          %i.icon-arrow-up
          %i.icon-arrow-down
        %li.sorter.sorter-date
          =link_to 'Date', '#' 
          %i.icon-arrow-up
          %i.icon-arrow-down
        %li.filter_header Show:
        %li.filter.filter-all 
          =link_to 'All', '#'
        -groups = Group.all.collect{|g| g unless g.people.active.blank?}.compact
        - if groups
          - groups.each do |g|
            -safe_name = g.name.gsub(/ /,'_').downcase
            %li.filter{class: "filter-#{safe_name}"}
              =link_to g.name, '#'
        %li.filter_header People In:
        - cities = City.all.collect{|c| c unless c.people.active.blank?}.compact
        - if cities 
          -cities.each do |c|
            -safe_name = c.name.gsub(/ /,'_').downcase
            %li.filter{class: "filter-#{safe_name}"}
              =link_to c.name, '#'
            

  %section.search_and_filter_container.span9
    .row
      -@people.each_with_index do |p, i|
        -name = p.name
        -person_groups = p.groups.map{|g| "filter-#{g.name.gsub(/ /,'_').downcase}"}.join(' ')
        -city_filter = p.city ? "filter-#{p.city.name.gsub(/ /,'_').downcase}" : ''
        .image_list_item.person.span3{class: "#{person_groups} #{city_filter}", data: {created_at: p.created_at.to_i } }
          =link_to marketing_person_path(p), class: 'block_link' do
            %span
          .front.wrapper
            .image
              - if p.image
                =image_tag p.image.thumb('270x244').url
              - else
                =image_tag 'defaultbust.jpg'
            %h2.text_filter{class: "#{if name.length > 30 then 'long_title' end}"}
              =name
            %p
              =p.tagline
          .back
            %h2=p.name
            %h3 Contact
            %dl
              -unless p.phone.blank?
                %dt Phone: 
                %dd= p.phone
              -unless p.skype.blank?
                %dt Skype: 
                %dd= p.skype
              -unless p.email.blank?
                %dt Email: 
                %dd= p.email
            -unless p.skills.blank?
              %h3 Skills
              %p #{p.skills.limit(5).map{|s| s.name }.join(',  ')}...
            .more
              %i.icon-plus

=content_for :javascripts do
  :coffeescript
    @search_filter = new Enspiral.Views.SimpleFilterSearch(
      el: '.search_and_filter'
      targetClass: '.image_list_item'
      containerClass: '.search_and_filter_container .row'
    )
