- title("View Invoice")
.row
  %h1.span5.bottom_margin Invoice to #{@invoice.customer.name}
  .model_actions
    =link_to 'Edit', invoice_path(@invoice, :edit), :class =>'btn'

    -if @invoice.allocated_in_full?
      -if not @invoice.paid_in_full?
        =link_to 'Pay and Disburse', invoice_path(@invoice, :pay_and_disburse), pay_and_disburse_options(@invoice)
      -else
        =link_to 'Disburse', invoice_path(@invoice, :disburse), disburse_options(@invoice)

    -if @invoice.can_be_deleted?
      =link_to 'Destroy', invoice_path(@invoice), delete_options(@invoice)

.stats.bottom_margin
  =render 'status_line'
.h-rule

%h3 Pending Allocations
%table.table
  %thead
    %tr
      %th Account
      %th Gross Amount
      %th Comission
      %th Disburse
  %tbody
    -@invoice.pending_allocations.each do |a|
      %tr
        %td=a.account.name
        %td=number_to_currency(a.amount)
        %td=a.commission
        -if @invoice.amount_disbursable >= a.amount
          %td=link_to('Disbuse', invoice_path(@invoice,{:action => :disburse, :invoice_allocation_id => a}), :method => :post)
        -else
          %td
.h-rule

%h3 Disbursed Allocations
%table.table
  %thead
    %tr
      %th Account
      %th Gross Amount
      %th Comission
  %tbody
    -@invoice.allocations.disbursed.each do |a|
      %tr
        %td=a.account.name
        %td=number_to_currency(a.amount)
        %td=a.commission

.h-rule
  .row
    .span5
      %h3 Allocations
      %table.table.table-striped
        %thead
          %th Amount
          %th Paid on
        %tbody
          -@invoice.payments.order(:paid_on).each do |p|
            %tr
              %td=p.amount
              %td=p.paid_on

    .span5
      =simple_form_for [company_or_project, @invoice] do |f|
        %h3.bottom_margin Payments
        #payments
          =f.simple_fields_for :payments do |pf|
            %p
              =number_to_currency(pf.object.amount)
              on
              =l pf.object.paid_on
          .links
            =link_to_add_association 'Add Payment', f, :payments, :class => :btn
        =f.submit :Save, class: 'btn btn-primary'
